parameters:
  solution: ''
  buildConfiguration: 'Release'
  artifactName: 'drop'
  testProjects: ''
  sonarProjectKey: ''
  sonarOrganization: ''
  sonarServiceConnection: 'SonarCloudConnection'

jobs:
- job: Build
  displayName: 'Build, Test & Analyze'
  pool:
    vmImage: 'windows-latest'

  steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '9.0.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - task: SonarCloudPrepare@2
      inputs:
        SonarCloud: '${{ parameters.sonarServiceConnection }}'
        organization: '${{ parameters.sonarOrganization }}'
        scannerMode: 'MSBuild'
        projectKey: '${{ parameters.sonarProjectKey }}'
        projectName: '${{ parameters.sonarProjectKey }}'

    - task: DotNetCoreCLI@2
      displayName: 'Restore Project'
      inputs:
        command: 'restore'
        projects: '${{ parameters.solution }}'

    - task: DotNetCoreCLI@2
      displayName: 'Run Build'
      inputs:
        command: 'build'
        projects: '${{ parameters.solution }}'
        arguments: '--configuration ${{ parameters.buildConfiguration }}'
    
    - task: DotNetCoreCLI@2
      displayName: 'Run Tests'
      inputs:
        command: 'test'
        projects: '${{ parameters.testProjects }}'
        arguments: '--configuration ${{ parameters.buildConfiguration }} --no-build --logger trx'
        publishTestResults: true

    - task: SonarCloudAnalyze@2
      displayName: 'Run SonarCloud Analysis'

    - task: SonarCloudPublish@2
      displayName: 'Publish SonarCloud Analysis Results'
      inputs:
        pollingTimeoutSec: '300'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Artifact'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '${{ parameters.solution }}'
        arguments: '--configuration ${{ parameters.buildConfiguration }} --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: '${{ parameters.artifactName }}'
    
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'VSTest'
        testResultsFiles: '**/TestResults/*.trx'
