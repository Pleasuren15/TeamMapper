parameters:
  projectDirectory: ''
  sonarProjectKey: ''
  sonarOrganization: ''
  sonarServiceConnection: 'SonarCloudConnection'

jobs:
- job: BuildAndTestProject
  displayName: 'Build & Test Project'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '18.x'

  - task: SonarCloudPrepare@3
    displayName: 'Prepare SonarCloud Analysis'
    inputs:
      SonarCloud: ${{ parameters.sonarServiceConnection }}
      organization: ${{ parameters.sonarOrganization }}    
      scannerMode: 'dotnet'
      projectKey: ${{ parameters.sonarProjectKey }}
      projectName: ${{ parameters.sonarProjectKey }}
      projectVersion: '$(Build.BuildNumber)'
      extraProperties: |
        sonar.scanner.metadataFilePath=$(Agent.TempDirectory)/sonar/$(Build.BuildNumber)/test/report-task.txt
        sonar.coverageReportPaths=$(Common.TestResultsDirectory)/SonarQube.xml
        sonar.javascript.lcov.reportPaths=$(Build.SourcesDirectory)/test_results/lcov.info
        sonar.javascript.coveragePlugin=lcov
        sonar.testExecutionReportPaths=test_results/TEST-results.xml
        sonar.dynamicAnalysis=reuseReports
        sonar.qualitygate.wait=true
    
  # sonar.sources=$(Build.SourcesDirectory)/src/team-mapper-web
  - script: |
      cd ${{ parameters.projectDirectory }}
      npm install
    displayName: 'Install dependencies'
    
  - script: |
      cd ${{ parameters.projectDirectory }}
      npm run build
    displayName: 'Build Node App'

  - script: |
      cd ${{ parameters.projectDirectory }}
      npx eslint "src/**/*.{js,jsx,ts,tsx}"
    displayName: 'Run Lint'  
    
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      PathtoPublish: '${{ parameters.projectDirectory }}/build'
      ArtifactName: 'react-app'
      publishLocation: 'Container'

  - task: SonarCloudAnalyze@3
    inputs:
      jdkversion: 'JAVA_HOME'
    displayName: 'SonarCloud Analyze'

  - task: SonarCloudPublish@3
    inputs:
      pollingTimeoutSec: '300'
    displayName: 'SonarCloud Publish'
    