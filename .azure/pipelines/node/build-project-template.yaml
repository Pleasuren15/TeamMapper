parameters:
  projectDirectory: ''
  sonarProjectKey: ''
  sonarOrganization: ''
  sonarServiceConnection: 'SonarCloudConnection'

jobs:
- job: BuildAndTestProject
  displayName: 'Build & Test Project'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'ubuntu-latest'

  steps:
  - task: NodeTool@0
    displayName: 'Install Node.js'
    inputs:
      versionSpec: '18.x'

  - task: SonarCloudPrepare@3
    displayName: 'Prepare SonarCloud Analysis'
    inputs:
      SonarCloud: ${{ parameters.sonarServiceConnection }}
      organization: ${{ parameters.sonarOrganization }}    
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: ${{ parameters.sonarProjectKey }}
      cliProjectName: ${{ parameters.sonarProjectKey }}
      extraProperties: |
        sonar.sources=${{ parameters.projectDirectory }}
        sonar.exclusions=node_modules/**,**/*.test.js
        sonar.javascript.lcov.reportPaths=coverage/lcov.info

  - task: Powershell@2
    displayName: 'Install dependencies'
    inputs:
      targetType: 'inline'
      script: |
        cd ${{ parameters.projectDirectory }}
        npm install
      
  - task: Powershell@2
    displayName: 'Build Node App'
    inputs:
      targetType: 'inline'
      script: |
        cd ${{ parameters.projectDirectory }}
        npm run build

  - task: Powershell@2
    displayName: 'Run ESLint'
    inputs:
      targetType: 'inline'
      script: |
          cd ${{ parameters.projectDirectory }}
          npx eslint "src/**/*.{js,jsx,ts,tsx}"
    
  - task: PublishBuildArtifacts@1
    displayName: 'Publish build artifacts'
    inputs:
      PathtoPublish: '${{ parameters.projectDirectory }}/build'
      ArtifactName: 'react-app'
      publishLocation: 'Container'

  - task: SonarCloudAnalyze@3
    displayName: 'SonarCloud Analyze'

  # - task: SonarCloudPublish@3
  #   inputs:
  #     pollingTimeoutSec: '300'
  #   displayName: 'SonarCloud Publish'
    