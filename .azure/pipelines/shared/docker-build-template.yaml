parameters:
  - name: dockerRegistryServiceConnection
    type: string
    displayName: 'Docker Registry Service Connection'
    default: 'DockerHubConnection'
    
  - name: dockerfilePath
    type: string
    displayName: 'Dockerfile Path'

  - name: repositoryPath
    type: string
    displayName: 'Repository Path'

  - name: jobName
    type: string
    displayName: 'Job Name'
    default: 'BuildAndPublishDockerImage'

  - name: dependsOn
    type: string
    displayName: 'Depends On'
    default: ''

  - name: dockerImageName
    displayName: 'The name of the Docker image when it has been built'
    type: string

jobs:
- job: ${{ parameters.jobName }}
  displayName: 'Build and Publish Docker Image'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: CmdLine@2
    displayName: 'List Current Directory'
    inputs:
      script: |
        echo "Current Directory: $(System.DefaultWorkingDirectory)"
        dir

  - task: Docker@2
    displayName: 'Docker Login'
    inputs:
      containerRegistry: ${{ parameters.dockerRegistryServiceConnection }}
      command: 'login'

  - task: Docker@2
    displayName: 'Build image'
    inputs:
      containerRegistry: ${{ parameters.dockerRegistryServiceConnection }}
      repository: ${{ parameters.repositoryPath }}/${{ parameters.dockerImageName }}
      command: 'build'
      Dockerfile: ${{ parameters.dockerfilePath }}
      tags: |
        latest
        $(Build.BuildNumber)
      buildContext: .
      addPipelineData: false

  - task: Docker@2
    displayName: 'Push image with version tag'
    inputs:
      containerRegistry: ${{ parameters.dockerRegistryServiceConnection }}
      repository: ${{ parameters.repositoryPath }}/${{ parameters.dockerImageName }}
      command: 'push'
      tags: '$(Build.BuildNumber)'

  - task: Docker@2
    displayName: 'Push latest tag'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    inputs:
      containerRegistry: ${{ parameters.dockerRegistryServiceConnection }}
      repository: ${{ parameters.repositoryPath }}/${{ parameters.dockerImageName }}
      command: 'push'
      tags: 'latest'