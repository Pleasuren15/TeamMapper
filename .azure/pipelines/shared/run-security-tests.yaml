parameters:
  jobName: 'RunSecurityTests'
  dependsOn: ''
  projectName: ''
  projectFolder: ''
  runOwaspZapTests: true
  target: '.'
  dockerRepository: 'pleasurendhlovudev'
  dockerImage: ''
  dockerHubConnection: 'DockerHubConnection'

jobs:
- job: ${{ parameters.jobName }}
  displayName: 'Run Security Tests'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - ${{ if eq(parameters.runOwaspZapTests, true) }}:
    - script: |
        echo Installing OWASP Dependency Check...
        wget http://github.com/jeremylong/DependencyCheck/releases/download/v6.1.6/dependency-check-6.1.6-release.zip
        unzip dependency-check-6.1.6-release.zip
      displayName: 'Install OWASP Dependency Check'

  - ${{ if eq(parameters.runOwaspZapTests, true) }}:
    - script: |
        echo Running OWASP Dependency Check...
        ./dependency-check/bin/dependency-check.sh --project ${{ parameters.projectName }} --scan "$(Build.SourcesDirectory)/src/${{ parameters.projectFolder }}/" --out "$(Build.ArtifactStagingDirectory)/dependency-check-report"
      displayName: 'Run OWASP Dependency Check'

  - ${{ if eq(parameters.runOwaspZapTests, true) }}:
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)/dependency-check-report'
        artifact: 'OWASPDependencyCheckReport'
      displayName: 'Publish OWASP Results'

  # https://github.com/aquasecurity/trivy-azure-pipelines-task/blob/main/docs/trivyv2.md
  - task: trivy@2
    name: TrivyCurrent
    displayName: 'Scan current repository as filesystem'
    inputs:
      version: 'latest'
      type: 'filesystem'
      target: ${{ parameters.target }}
      scanners: 'misconfig,vuln,secret'
      ignoreUnfixed: true
      ignoreScanErrors: true
      reports: 'github, html, junit'
      publish: true

  # - task: trivy@2
  #   name: TrivyPrivate
  #   displayName: 'Scan private GitHub repository'
  #   inputs:
  #     type: 'repository'
  #     target: 'https://github.com/Pleasuren15/TeamMapper'
  #     scanners: 'secret,vuln,misconfig'
  #     ignoreUnfixed: true
  #     reports: 'github, junit, sarif'
  #   env:
  #     GITHUB_TOKEN: $(GITHUB_TOKEN)


  - task: Docker@2
    displayName: Login to container registry
    inputs:
      command: login
      containerRegistry: ${{ parameters.dockerHubConnection }}

  # - task: trivy@2
  #   inputs:
  #     type: 'image'
  #     target: ${{ parameters.dockerRepository }}/${{ parameters.dockerImage }}:latest
  #   displayName: 'Scan Docker Image'

  - task: PublishTestResults@2
    displayName: 'Publish Trivy Results'
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: |
        $(TrivyCurrent.junitReport)
        $(TrivyPrivate.junitReport)
      searchFolder: '$(Agent.TempDirectory)'
      testRunTitle: 'Trivy'
      publishRunAttachments: false