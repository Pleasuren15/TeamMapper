parameters:
  projectDirectory: ''
  sonarProjectKey: ''
  sqlProject: ''
  testProject
  sonarOrganization: 'pleasurendhlovudev'
  sonarServiceConnection: 'SonarCloudConnection'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: BuildAndTestProject
  displayName: 'Build & Test Project'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UseDotNet@2
    displayName: 'Install .Net 9.0'
    inputs:
      packageType: 'sdk'
      version: '9.0.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: SonarCloudPrepare@3
    displayName: 'Prepare SonarCloud Analysis'
    inputs:
      SonarCloud: ${{ parameters.sonarServiceConnection }}
      organization: ${{ parameters.sonarOrganization }}    
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: ${{ parameters.sonarProjectKey }}
      cliProjectName: ${{ parameters.sonarProjectKey }}
      extraProperties: |
        sonar.sources=${{ parameters.projectDirectory }}
        sonar.exclusions=node_modules/**,**/*.test.js
        sonar.javascript.lcov.reportPaths=coverage/lcov.info

  - task: VSBuild@1
    displayName: 'Build .sqlproj'
    inputs:
      solution: ${{ parameters.sqlProject }}
      msbuildArgs: '/p:Configuration=${{ parameters.buildConfiguration }}'
      platform: ${{ parameters.buildPlatform }}
      configuration: ${{ parameters.buildConfiguration }}

  - task: CopyFiles@2
    displayName: 'Copy DACPAC to artifact staging directory'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**\bin\${{ parameters.buildConfiguration }}\*.dacpac'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'

  - task: DotNetCoreCLI@2
    displayName: 'Restore Project'
    inputs:
      command: 'restore'
      projects: ${{ parameters.testProject }}

  - task: DotNetCoreCLI@2
    displayName: 'Run Build'
    inputs:
      command: 'build'
      projects: ${{ parameters.testProject }}
      arguments: '--configuration ${{ parameters.buildConfiguration }}'
    
  - task: DotNetCoreCLI@2
    displayName: 'Run unit Tests'
    inputs:
      command: 'test'
      projects: '${{ parameters.testProject }}'
      arguments: '--configuration ${{ parameters.buildConfiguration }} --no-build --logger trx'
      publishTestResults: true

  - task: SonarCloudAnalyze@3
    displayName: 'SonarCloud Analyze'
  # - task: SonarCloudPublish@3
  #   inputs:
  #     pollingTimeoutSec: '300'
  #   displayName: 'SonarCloud Publish'

  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    condition: succeededOrFailed()
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/TestResults/*.trx'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifact: dacpac'
    inputs:
      PathtoPublish: $(Build.ArtifactStagingDirectory)
      ArtifactName: 'dacpac'
      publishLocation: 'Container'
    