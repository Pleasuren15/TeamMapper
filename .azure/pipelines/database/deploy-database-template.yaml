parameters:
  dependsOn: ''
  artifactName: 'Migrations'
  project: ''
  startUpProject: ''

jobs:
- job: DeployDatabase
  displayName: 'Deploy Database'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: AzureKeyVault@2
    displayName: 'Fetch Secrets from Key Vault'
    inputs:
      azureSubscription: 'TeamMapperServiceConnection'
      KeyVaultName: 'team-mapper-kv'
      SecretsFilter: 'team-mapper-db-connection-string'
      RunAsPreJob: true

  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        $filePath = "$(Build.SourcesDirectory)/src/${{ parameters.startUpProject }}/appsettings.json"
        Write-Host "Updating TeamMapperDb in $filePath"
        # Read the JSON file
        $json = Get-Content $filePath -Raw | ConvertFrom-Json
        # Replace the TeamMapperDb value
        $json.ConnectionStrings.TeamMapperDb = "$(team-mapper-db-connection-string)"
        # Write back to the file
        $json | ConvertTo-Json -Depth 10 | Set-Content -Path $filePath -Encoding UTF8

  - task: UseDotNet@2
    displayName: 'Install .Net 9.0'
    inputs:
      packageType: 'sdk'
      version: '9.0.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: PowerShell@2
    displayName: 'Install EF Package'
    inputs:
      targetType: 'inline'
      script: 'dotnet tool install --global dotnet-ef'

  - task: DownloadBuildArtifacts@1
    displayName: 'Download Migrations Artifact'
    inputs:
      buildType: 'current'   # downloads artifacts from current build
      artifactName: ${{ parameters.artifactName }}
      downloadPath: '$(Pipeline.Workspace)/Migrations'

  - task: Powershell@2
    displayName: 'List Downloaded Migrations'
    inputs:
      targetType: 'inline'
      script: |
        ls -R $(Pipeline.Workspace)/Migrations

  - task: PowerShell@2
    displayName: 'Update EF Database'
    inputs:
      targetType: 'inline'
      script: |
        dotnet ef database update --project src/${{ parameters.project }} --startup-project src/${{ parameters.startUpProject }}