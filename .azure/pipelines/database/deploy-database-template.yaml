parameters:
  dependsOn: ''
  artifactName: 'dacpac'

jobs:
- job: DeployDatabase
  displayName: 'Deploy Database'
  dependsOn: ${{ parameters.dependsOn }}
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: DownloadBuildArtifacts@1
    displayName: 'Download Artifact: dacpac'
    inputs:
      buildType: 'current'   # downloads artifacts from current build
      artifactName: ${{ parameters.artifactName }}
      downloadPath: '$(Pipeline.Workspace)/downloaded'

  - script: ls -R $(Pipeline.Workspace)/downloaded
    displayName: 'List downloaded files'

  - task: SqlAzureDacpacDeployment@1
    displayName: 'Deploy DACPAC to Azure SQL'
    inputs:
      azureSubscription: 'YourServiceConnection'        # Azure Resource Manager service connection
      AuthenticationType: 'server'                      # or 'aad' for Azure AD auth
      ServerName: 'yourserver.database.windows.net'    # Azure SQL server fully qualified domain name (FQDN)
      DatabaseName: 'yourdatabase'
      SqlUsername: '$(sqlUser)'                         # Pipeline secret variable for username
      SqlPassword: '$(sqlPassword)'                     # Pipeline secret variable for password
      DacpacFile: '$(Build.ArtifactStagingDirectory)/drop/YourDatabase.dacpac'  # path to your DACPAC
      AdditionalArguments: '/p:BlockOnPossibleDataLoss=true /p:DropObjectsNotInSource=false'
    